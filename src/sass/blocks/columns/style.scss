.wp-block-columns {
    display: grid;
    gap: var(--wp--custom--spacing--block-gap--medium);
    //row-gap: var(--wp--custom--spacing--block-gap--small);
}

@supports (width: min(350px, 100%)) {
    .wp-block-columns {
        grid-template-columns: repeat(auto-fit, minmax(min(400px, 100%), 1fr)) !important;
    }

    @media (min-width: 55em) {
        .wp-block-columns {
            grid-template-columns: repeat(auto-fit, minmax(min(246px, 100%), 1fr)) !important;
        }
    }
}


/* ~~~~~ [ Custom variations ] ~~~~~ */

@media (min-width: 55em) {
    .wp-block-columns--1\:2 {
        > :nth-child(2n+2) {
            grid-column: 2 / 4;
        }
    }

	.wp-block-columns--2\:1 {
        > :nth-child(2n+1) {
            grid-column: 1 / 3;
        }
	}
}

@media (min-width: 73.4375em) {
	// 3 columns per row, column 2 in row is 2x width when screen wide enough.
	.wp-block-columns--1\:2\:1 > :nth-child(3n+2) {
		grid-column: auto / span 2;
	}
}


/* ~~~~~ [ Custom styles ] ~~~~~ */

// Manage widows.
@media (min-width: 50em) and (max-width: 70em) {
	.is-style-columns-has-widow-full-width {
        grid-template-columns: repeat(2, 1fr) !important;

		// Target the last child if odd.
		.wp-block-column:last-child:nth-child(odd):not(:first-child) {
			grid-column: 1 / -1;
		}
	}
}


/* ~~~~~ [ Settings ] ~~~~~ */

.is-not-stacked-on-mobile {
	grid-template-columns: repeat(auto-fit, minmax(0, 1fr)) !important;
}